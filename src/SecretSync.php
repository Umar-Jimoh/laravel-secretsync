<?php

declare(strict_types=1);

namespace UmarJimoh\SecretSync;

use Illuminate\Support\Facades\Artisan;
use UmarJimoh\SecretSync\Caches\SecretCache;
use UmarJimoh\SecretSync\Helpers\SecretMapper;
use UmarJimoh\SecretSync\Interfaces\SecretProviderInterface;

/*
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
##################################################-.........-+#########+############################
##############################################-..................+####-.+###########################
##########################+---.......+#####+.......................-+-..-###########################
######################-.............#####+.......-###########+..........-###########################
###################+.......--+##########-.....-#################+........###########################
#################+.....-#######+++#####.....-#####+-.....-+######-.......+##########################
################....-####+.......+####-....-####+....++-...-####.........-##########################
###############....+##+.........-####+....-#####...#######..-####+-......-##########################
##############...-##-....-+##########-....#####+..+#######-..##########+++##########################
#############-..-##-...+####+-..#####....-#####+..+#######-..#######################################
#############-..##-..-###-......#####....-####+...............+#####################################
##############.-#+..-##-....--++#####....-####-...............-####.....############################
############+-###-.-##...-####################-.....-##+......-####.....############################
#############..-+#############################-......##+......+####....-############################
##############......---+++++####-.--++#########......##-......+###+....+############################
###############+............####+..........+###+.....--......+###+....-#############################
############+.+####++-------#####.........+######-.........-#####.....+####+++######################
#############-..-++##############-.......+#########++---+######-.....+####-.......-#################
##############-.............#####-........-##################+......##########+-.....###############
############++##+...........#####+...........-############+.......+###############+...+#############
############+..+##################..-##+...........---..........-######.........-###+..#############
#############+....######++########-#######+..................-#######+.............-##-+############
###############-+##+.........-################+-........-+######################+....+##############
##################.............+################################+-.........---+####+..-#############
#################.....-####-....#############################+....................+##-.+############
#################....-######...-################################################-...+#++############
#################.....+##########-....+#####+....-#-...+-......+#######-.......-+##-.-##############
#################+.......+#######+....-#####-....##-.............####-............##+.-#############
###################-........-#####+....+####....+##-....-###.....+##.....+####-....+#+.+############
#####################+-........+###.....###+...-###-...-#####....+#-....#######+++####-+############
#########################+-.....-###....+##....+###-...-#####....-#....-##############++############
############################-....+##+....#-...-####-...-#####....-#....-##############++############
################+-...#######+....+###-...-....#####-...-#####....+#-....########+#####+#############
################+.....-####+.....#####.......+#####-...-#####....+##.....#####+....+################
#################+..............######+.....-######-...-#####....-###.............+#################
###################+..........+########-....+######-...-#####....-####+.........-###################
#######################++++############....-##############################++++######################
######################################-...-#########################################################
##################################+......-##########################################################
##################################+.....+###########################################################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
*/

class SecretSync
{
    public function secretSyncService(SecretProviderInterface $provider): array
    {
        $cache = app(SecretCache::class);
        $useCache = false;
        $secrets = [];

        if (config('secretsync.cache.enabled')) {
            $secrets = $cache->get();

            if (!empty($secrets)) {
                $useCache = true;
            }
        }

        if (empty($secrets)) {
            $secrets = $this->syncFromProvider($provider);
        }

        if (isset($secrets['error'])) {
            return ['error' => $secrets['error']];
        }

        (new SecretMapper)->map($secrets);

        Artisan::call('config:cache');

        if (!$useCache && config('secretsync.cache.enabled')) {
            $message = $cache->store($secrets);
            if (isset($message['warning'])) {
                $secrets['warning'] = $message['warning'];
            }
        }

        return $secrets;
    }

    private function syncFromProvider(SecretProviderInterface $provider): array
    {
        $secrets = $provider->getSecrets();

        if (isset($secrets['debug'])) {
            return ['error' => $secrets['debug']];
        }

        if (empty($secrets)) {
            return ['error' => "Failed to fetch secret from the provider: " . $provider->name()];
        }

        return $secrets;
    }
}
